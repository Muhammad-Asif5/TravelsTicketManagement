function changeBank(e) { "" != e && $.ajax({ type: "GET", url: "/AmountReceiveable/GetBalance", data: { BankID: e }, success: function (e) { rBalance = [], null != e.RemainingBalance ? (rBalance.push(e.RemainingBalance), $("#Balance").val(e.RemainingBalance)) : $("#Balance").val(0) }, error: function (e) { alert(e) } }) } $("#reservation").daterangepicker(); var rBalance = []; function Calculate_Received_Amount(e) { var t; 0 == previousAmount.length ? 0 == rBalance.length || (t = parseFloat(rBalance[0]) + parseFloat(e), $("#Balance").val(t.toFixed(2))) : (t = parseFloat(rBalance[0]) - parseFloat(previousAmount) + parseFloat(e), $("#Balance").val(t.toFixed(2))) } function viewReportByDate() { var e = $("#reservation").val(), t = e.substring(0, 10), e = e.substring(13); $.ajax({ type: "POST", url: "/AmountReceiveable/GetAllAmountReceiveableByDate", data: { Dfrom: t, Dto: e }, success: function (e) { 1 == e.success ? ($("#myTable").DataTable().destroy(), $("table tbody").empty(), e = e.jsonResult.Data, $("#myTable").DataTable({ data: e, columns: [{ data: "Receipt_Ref", width: "300px", orderable: !1, render: function (e, t, a, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Receipt_Ref", width: "100px" }, { title: "Received Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { title: "Received From", data: "Received_Paid", width: "150px" }, { data: "Debit" }, { data: "Cust_Code" }], fnCreatedRow: function (e, t, a) { t = t.Receipt_Ref; $(e).attr("id", t) }, scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Add New Amount</b> Button" } }), $(".dataTables_filter input").attr("placeholder", "Search AR Receipt")) : swal("INFO!", e.message, "info") }, error: function (e) { alert(e) } }) } function ViewReportData(e) { if (null != e) { var t = "AmountReceiveable/ReceiptVoucher?InvNo=" + e, e = window.innerHeight; window.innerWidth; return document.body.style.height = e + "px", newwindow = window.open(t, "_blank", "width=940,height=" + e), window.focus && newwindow.focus(), !1 } alert(0) } $("#AddBtn").click(function () { resetDatafromFrom(), $("#btnSave").show(), $("#btnUpdate").hide(), $(".modal-title").text("Add Receiveable Amount Details"), $("#myModal").modal("show"), $(".modal-header").removeClass("bg-primary"), $(".modal-header").addClass("bg-success") }); var previousAmount = []; function getById(e) { resetDatafromFrom(), $.ajax({ type: "POST", url: "/AmountReceiveable/GetDataById", data: { id: e }, success: function (e) { var t; "" == e ? swal("WARNING!", "You cannot edit this info / No Permission", "warning") : ($("#Bank_ID").val(e.check[0].Bank_ID), $("#VID").val(e.check[0].VID), $("#Received_Paid_Date").val(e.check[0].Received_Paid_Date), $("#Narration").val(e.check[0].Narration), $("#Received_Paid").val(e.check[0].Received_Paid), $("#Amount").val(e.check[0].Amount), t = ConvertDate(e.check[0].Received_Paid_Date), $("#Received_Paid_Date").val(t), $("#Cust_Code").val(e.check[0].Cust_Code).trigger("change"), $("#Balance").val(e.RemainingBalance), (previousAmount = []).push(e.check[0].Amount), (rBalance = []).push(e.RemainingBalance), addcssClassForValidation(), $("#btnSave").hide(), $("#btnUpdate").show(), $(".modal-title").text("Update Receiveable Amount Details"), $("#myModal").modal("show"), $(".modal-header").addClass("bg-primary"), $(".modal-header").removeClass("bg-success")) } }) } function deleteById(a) { var e = $("#myTable").DataTable().row("#" + a).data().Receipt_Ref; swal({ title: "Are you sure?", text: "Your will not be able to recover " + e + " Invoice Data!", type: "warning", showCancelButton: !0, confirmButtonColor: "#DD6B55", confirmButtonText: "Yes, delete it!", cancelButtonText: "No, cancel plx!", closeOnConfirm: !1, closeOnCancel: !1 }, function (e) { e ? $.ajax({ type: "POST", url: "/AmountReceiveable/DeleteDataByID", data: { id: a }, success: function (e) { var t; e.success ? "Delete" == e.Delete ? (t = $("#myTable").DataTable(), index = t.row("#" + a), t.row(index[0]).data(), t.row(index[0]).remove().draw(), swal("Deleted!", e.message, "success"), setTimeout(function () { swal.close() }, 1e3)) : swal("Error!", e.message, "error") : swal("WARNING!", "You cannot delete this info / No Permission", "warning") } }) : swal("Cancelled", "Your file is safe :)", "error") }) } function resetDatafromFrom() { $("#VID").prop("readonly", !0), $("#myForm")[0].reset(), $("#Amount").val(0), $("#VID").val(0), $("#Balance").val(0), addcssClassForValidation() } function addcssClassForValidation() { var e = $("#myForm :input"), t = {}; e.each(function () { t[this.name] = $(this).val(), "" == $(this).val() || "0" == $(this).val() && "btn" != this.name ? "btn" != this.name && (document.getElementById(this.id).className = "form-control is-valid is-invalid") : "btn" != this.name && (document.getElementById(this.id).className = "form-control is-valid") }) } function myDatatable() { $.ajax({ type: "GET", url: "/AmountReceiveable/GetAllAmountReceiveable", data: {}, success: function (e) { 1 == e.success ? (e = e.jsonResult.Data, $("#myTable").DataTable({ data: e, columns: [{ data: "Receipt_Ref", width: "220px", orderable: !1, render: function (e, t, a, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Receipt_Ref", width: "100px" }, { title: "Received Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { title: "Received From", data: "Received_Paid", width: "150px" }, { data: "Debit" }, { data: "Cust_Code" }], fnCreatedRow: function (e, t, a) { t = t.Receipt_Ref; $(e).attr("id", t) }, scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Add New Amount</b> Button" } }), $(".dataTables_filter input").attr("placeholder", "Search AR Receipt")) : ($("#myTable").DataTable({ columns: [{ data: "Receipt_Ref", width: "220px", orderable: !1, render: function (e, t, a, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Receipt_Ref", width: "100px" }, { title: "Received Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { title: "Received From", data: "Received_Paid", width: "150px" }, { data: "Debit" }, { data: "Cust_Code" }], scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Add New Amount</b> Button" } }), swal("INFO!", e.message, "info")) } }) } function ConvertDate(e) { if (null == e) return ""; e = /Date\(([^)]+)\)/.exec(e), e = new Date(parseFloat(e[1])); return e.getDate() + "/" + ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][e.getMonth()] + "/" + e.getFullYear() } $("#btnUpdate").click(function (e) { if ($("#myForm").valid()) { var n = document.forms.myForm, t = { type: "POST", url: n.action, data: new FormData(n), success: function (e) { var t, a; e.success ? (t = $("#myTable").DataTable(), $("#myModal").modal("hide"), index = t.row("#" + n.VID.value), (a = t.row(index[0]).data()).Date = n.Received_Paid_Date.value, a.Received_Paid = n.Received_Paid.value, a.Debit = n.Amount.value, a.Cust_Code = $("#Cust_Code option:selected").text(), t.row(index[0]).data(a).draw(), $(".ui-pnotify").remove(), new PNotify({ title: "SUCCESS!", text: e.message, type: "success", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" })) : swal("Error!", e.message, "error") } }; return "multipart/form-data" == $("form").attr("enctype") && (t.contentType = !1, t.processData = !1), $.ajax(t), !1 } }), $("#btnSave").click(function () { Balance = parseFloat($("#Balance").val()); var a = document.forms.myForm; if ($("#myForm").valid()) { var n = $("#myTable").DataTable(), e = { type: "POST", url: a.action, data: new FormData(a), success: function (e) { var t; e.success ? ($("#myModal").modal("hide"), t = n.row.add({ Receipt_Ref: '<button class="btn btn-success btn-sm" onclick="ViewReportData(this.id)" id="' + e.NextID + '">Cash Receipt Voucher</button> <button onclick="getById(this.id)" id="' + e.NextID + '" class="btn btn-primary btn-sm">Edit</button> <button id="' + e.NextID + '" class="btn btn-danger btn-sm" onclick="deleteById(id)">Delete</button>', Receipt_Ref: e.NextID, Date: a.Received_Paid_Date.value, Received_Paid: a.Received_Paid.value, Debit: a.Amount.value, Cust_Code: $("#Cust_Code option:selected").text() }).draw(!1), t = $("#myTable").dataTable().fnGetNodes(t), $(t).attr("id", e.NextID), $(".ui-pnotify").remove(), new PNotify({ title: "SUCCESS!", text: e.message, type: "success", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" })) : swal("Error!", e.message, "error") } }; return "multipart/form-data" == $("form").attr("enctype") && (e.contentType = !1, e.processData = !1), $.ajax(e), !1 } }), $(document).ready(function () { myDatatable(), $("#Received_Paid_Date").datepicker({ format: "d/M/yyyy", todayBtn: "linked", daysOfWeekHighlighted: "5", calendarWeeks: !0, autoclose: !0, todayHighlight: !0, startDate: "15-12-2016", endDate: "15-12-2032" }), $("#btnUpdate").hide(), $("#myForm").validate({ rules: { VID: { required: !0 } }, messages: { Received_Paid_Date: { required: "Please Enter Date" }, Narration: { required: "Please Enter Description" }, Received_Paid: { required: "Please Enter Received From" }, Cust_Code: { required: "Please Select Customer" }, Email: { required: "Please enter a email address" } }, errorElement: "span", errorPlacement: function (e, t) { e.addClass("invalid-feedback"), t.closest(".form-group").append(e) }, highlight: function (e, t, a) { $(e).addClass("is-invalid") }, unhighlight: function (e, t, a) { $(e).removeClass("is-invalid") } }) });