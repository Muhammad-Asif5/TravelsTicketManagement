$("#reservation").daterangepicker(); var Balance = ""; function changeBank(e) { "" != e && $.ajax({ type: "GET", url: "/AmountReceiveable/GetBalance", data: { BankID: e }, success: function (e) { rBalance = [], null != e.RemainingBalance ? (rBalance.push(e.RemainingBalance), $("#Balance").val(e.RemainingBalance)) : $("#Balance").val(0) }, error: function (e) { alert(e) } }) } function viewReportByDate() { var e = $("#reservation").val(), a = e.substring(0, 10), e = e.substring(13); $.ajax({ type: "POST", url: "/AmountPayable/GetAllAmountPayableByDate", data: { Dfrom: a, Dto: e }, success: function (e) { 1 == e.success ? ($("#myTable").DataTable().destroy(), $("table tbody").empty(), e = e.jsonResult.Data, $("#myTable").DataTable({ data: e, columns: [{ data: "Payment_Ref", width: "300px", orderable: !1, render: function (e, a, t, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Payment_Ref", width: "100px" }, { title: "Pay Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { data: "Cedit" }, { data: "Payable_Code" }, { data: "Account", width: "150px" }], fnCreatedRow: function (e, a, t) { a = a.Payment_Ref; $(e).attr("id", a) }, scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Pay New Amount</b> Button" } }), $(".dataTables_filter input").attr("placeholder", "Search AP/EXP Receipt")) : swal("INFO!", e.message, "info") }, error: function (e) { alert(e) } }) } function ViewReportData(e) { if (null != e) { var a = "AmountPayable/PayVoucher?InvNo=" + e, e = window.innerHeight; window.innerWidth; return document.body.style.height = e + "px", newwindow = window.open(a, "_blank", "width=940,height=" + e), window.focus && newwindow.focus(), !1 } alert(0) } function Calculate_Amount(e) { var a; 0 == previousAmount.length ? 0 == rBalance.length || (a = parseFloat(rBalance[0]) - parseFloat(e), $("#Balance").val(a.toFixed(2))) : (a = parseFloat(rBalance[0]) + parseFloat(previousAmount) - parseFloat(e), $("#Balance").val(a.toFixed(2))) } $('input:radio[name="r1"]').change(function () { $("input:radio[id=radioPrimary1]").is(":checked") && ($("#Exp_Code").hide(), $("#Exp_Code").val(""), $("#Payable_Code").show()), $("input:radio[id=radioPrimary2]").is(":checked") && ($("#Exp_Code").show(), $("#Payable_Code").hide(), $("#Payable_Code").val("")) }), $("#Exp_Code").hide(), $("#AddBtn").click(function () { resetDatafromFrom(), $("#btnSave").show(), $("#btnUpdate").hide(), $(".modal-title").text("Add Payable Amount Details"), $("#myModal").modal("show"), $(".modal-header").removeClass("bg-primary"), $(".modal-header").addClass("bg-success") }); var previousAmount = [], rBalance = []; function getById(e) { resetDatafromFrom(), $.ajax({ type: "POST", url: "/AmountPayable/GetDataById", data: { id: e }, success: function (e) { var a; "" == e ? swal("WARNING!", "You cannot edit this info / No Permission", "warning") : ($("#VID").val(e.check[0].VID), null != e.check[0].Payable_Code ? ($("#Payable_Code").val(e.check[0].Payable_Code), $("#Payable_Code").show(), $("#Exp_Code").hide(), $("#radioPrimary1").prop("checked", !0)) : ($("#Exp_Code").val(e.check[0].Exp_Code), $("#Payable_Code").hide(), $("#Exp_Code").show(), $("#radioPrimary2").prop("checked", !0)), $("#Narration").val(e.check[0].Narration), $("#Received_Paid").val(e.check[0].Received_Paid), $("#Amount").val(e.check[0].Amount), $("#Bank_ID").val(e.check[0].Bank_ID), $("#Balance").val(e.RemainingBalance), a = ConvertDate(e.check[0].Received_Paid_Date), $("#Received_Paid_Date").val(a), (previousAmount = []).push(e.check[0].Amount), (rBalance = []).push(e.RemainingBalance), addcssClassForValidation(), $("#btnSave").hide(), $("#btnUpdate").show(), $(".modal-title").text("Update Payable Amount Details"), $("#myModal").modal("show"), $(".modal-header").addClass("bg-primary"), $(".modal-header").removeClass("bg-success")) } }) } function deleteById(t) { var e = $("#myTable").DataTable().row("#" + t).data().Payment_Ref; swal({ title: "Are you sure?", text: "Your will not be able to recover " + e + " Invoice Data!", type: "warning", showCancelButton: !0, confirmButtonColor: "#DD6B55", confirmButtonText: "Yes, delete it!", cancelButtonText: "No, cancel plx!", closeOnConfirm: !1, closeOnCancel: !1 }, function (e) { e ? $.ajax({ type: "POST", url: "/AmountPayable/DeleteDataByID", data: { id: t }, success: function (e) { var a; e.success ? "Delete" == e.Delete ? (a = $("#myTable").DataTable(), index = a.row("#" + t), a.row(index[0]).data(), a.row(index[0]).remove().draw(), swal("Deleted!", e.message, "success"), setTimeout(function () { swal.close() }, 1e3)) : swal("Error!", e.message, "error") : swal("WARNING!", "You cannot delete this info / No Permission", "warning") } }) : swal("Cancelled", "Your file is safe :)", "error") }) } function resetDatafromFrom() { $("#VID").prop("readonly", !0), $("#myForm")[0].reset(), $("#Amount").val(0), $("#VID").val(0), $("#Balance").val(0), addcssClassForValidation() } function addcssClassForValidation() { var e = $("#myForm :input"), a = {}; e.each(function () { a[this.name] = $(this).val(), "" == $(this).val() || "0" == $(this).val() && "btn" != this.name ? "btn" != this.name && (document.getElementById(this.id).className = "form-control is-valid is-invalid") : "btn" != this.name && (document.getElementById(this.id).className = "form-control is-valid") }) } function myDatatable() { $.ajax({ type: "GET", url: "/AmountPayable/GetAllAmountPayable", data: {}, success: function (e) { 1 == e.success ? (e = e.jsonResult.Data, $("#myTable").DataTable({ bDestroy: !0, data: e, columns: [{ data: "Payment_Ref", width: "220px", orderable: !1, render: function (e, a, t, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Payment_Ref", width: "100px" }, { title: "Pay Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { data: "Cedit" }, { data: "Payable_Code" }, { data: "Account", width: "150px" }], fnCreatedRow: function (e, a, t) { a = a.Payment_Ref; $(e).attr("id", a) }, scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Pay New Amount</b> Button" } }), $(".dataTables_filter input").attr("placeholder", "Search AP/EXP Receipt")) : ($("#myTable").DataTable({ columns: [{ data: "Payment_Ref", width: "220px", orderable: !1, render: function (e, a, t, n) { return '<button class="btn btn-success btn-sm" id="' + e + '" onclick="ViewReportData(this.id)">Generate Invoice</button> <button onclick="getById(this.id)" id="' + e + '" class="btn btn-primary btn-sm">Edit</button> <button onclick="deleteById(this.id)" id="' + e + '" class="btn btn-danger btn-sm">Delete</button>' } }, { data: "Payment_Ref", width: "100px" }, { title: "Pay Date", width: "100px", data: "Date", render: function (e) { return null == e ? "" : moment(e).format("DD/MMM/YYYY") } }, { data: "Cedit" }, { data: "Payable_Code" }, { data: "Account", width: "150px" }], scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", order: [1, "DESC"], language: { search: "" }, bLengthChange: !1, bScrollCollapse: !0, processing: !0, sPaginationType: "full_numbers", oLanguage: { sEmptyTable: "No data found, Please click on <b>Pay New Amount</b> Button" } }), swal("INFO!", e.message, "info")) } }) } function ConvertDate(e) { if (null == e) return ""; e = /Date\(([^)]+)\)/.exec(e), e = new Date(parseFloat(e[1])); return e.getDate() + "/" + ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][e.getMonth()] + "/" + e.getFullYear() } function ToJavaScriptDate(e) { if (null == e) return ""; var a = /Date\(([^)]+)\)/.exec(e), t = new Date(parseFloat(a[1])), e = t.getFullYear(), a = 1 < (a = (1 + t.getMonth()).toString()).length ? a : "0" + a, t = t.getDate().toString(); return a + "/" + (t = 1 < t.length ? t : "0" + t) + "/" + e } $("#btnUpdate").click(function (e) { if ($("#myForm").valid()) { var n = document.forms.myForm, a = { type: "POST", url: n.action, data: new FormData(n), success: function (e) { var a, t; e.success ? (a = $("#myTable").DataTable(), $("#myModal").modal("hide"), index = a.row("#" + n.VID.value), t = a.row(index[0]).data(), "--Select Payable Code--" == $("#Payable_Code option:selected").text() ? (t.Date = n.Received_Paid_Date.value, t.Cedit = n.Amount.value, t.Payable_Code = "", t.Account = $("#Exp_Code option:selected").text()) : (t.Date = n.Received_Paid_Date.value, t.Cedit = n.Amount.value, t.Payable_Code = $("#Payable_Code option:selected").text(), t.Account = ""), a.row(index[0]).data(t).draw(), $(".ui-pnotify").remove(), new PNotify({ title: "SUCCESS!", text: e.message, type: "success", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" })) : swal("Error!", e.message, "error") } }; return "multipart/form-data" == $("form").attr("enctype") && (a.contentType = !1, a.processData = !1), $.ajax(a), !1 } }), $("#btnSave").click(function () { Balance = parseFloat($("#Balance").val()); var t = document.forms.myForm; if ($("#myForm").valid()) { var n = $("#myTable").DataTable(), e = { type: "POST", url: t.action, data: new FormData(t), success: function (e) { var a; e.success ? ($("#myModal").modal("hide"), a = ("--Select Payable Code--" == $("#Payable_Code option:selected").text() ? n.row.add({ Payment_Ref: '<button class="btn btn-success btn-sm" onclick="ViewReportData(this.id)" id="' + e.NextID + '">Cash Payment Voucher</button> <button onclick="getById(this.id)" id="' + e.NextID + '" class="btn btn-primary btn-sm">Edit</button> <button id="' + e.NextID + '" class="btn btn-danger btn-sm" onclick="deleteById(id)">Delete</button>', Payment_Ref: e.NextID, Date: t.Received_Paid_Date.value, Cedit: t.Amount.value, Payable_Code: "-", Account: $("#Exp_Code option:selected").text() }) : n.row.add({ Payment_Ref: '<button class="btn btn-success btn-sm" onclick="ViewReportData(this.id)" id="' + e.NextID + '">Cash Payment Voucher</button> <button onclick="getById(this.id)" id="' + e.NextID + '" class="btn btn-primary btn-sm">Edit</button> <button id="' + e.NextID + '" class="btn btn-danger btn-sm" onclick="deleteById(id)">Delete</button>', Payment_Ref: e.NextID, Date: t.Received_Paid_Date.value, Cedit: t.Amount.value, Payable_Code: $("#Payable_Code option:selected").text(), Account: "-" })).draw(!1), a = $("#myTable").dataTable().fnGetNodes(a), $(a).attr("id", e.NextID), $(".ui-pnotify").remove(), new PNotify({ title: "SUCCESS!", text: e.message, type: "success", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" })) : swal("Error!", e.message, "error") } }; return "multipart/form-data" == $("form").attr("enctype") && (e.contentType = !1, e.processData = !1), $.ajax(e), !1 } }), $(document).ready(function () { myDatatable(), $("#Received_Paid_Date").datepicker({ format: "d/M/yyyy", todayBtn: "linked", daysOfWeekHighlighted: "5", calendarWeeks: !0, autoclose: !0, todayHighlight: !0, startDate: "15-12-2016", endDate: "15-12-2032" }), $("#btnUpdate").hide(), $("#myForm").validate({ rules: { Course_ID: { required: !0 } }, messages: { Course_ID: { required: "Please Enter Course ID" }, Email: { required: "Please enter a email address" } }, errorElement: "span", errorPlacement: function (e, a) { e.addClass("invalid-feedback"), a.closest(".form-group").append(e) }, highlight: function (e, a, t) { $(e).addClass("is-invalid") }, unhighlight: function (e, a, t) { $(e).removeClass("is-invalid") } }) });