$("#reservation").daterangepicker(); var table, TotalInvoiceNoWithArray = [], newRollNo = [], AmountPayObject = []; function viewReport() { var e = $("#reservation").val(), t = e.substring(0, 10), a = e.substring(13), e = $("#Air_ID").val(); $("#myTable").DataTable().destroy(), $("table tbody").empty(), $.ajax({ type: "POST", url: "/GenerateInvoice/GetAllConfirmPayableByDate", data: { Dfrom: t, Dto: a, AirID: e }, beforeSend: function () { swal({ title: " ", text: "Please Wait", imageUrl: "/AdminAssets/Images/ajax-Load.gif", showCancelButton: !1, showConfirmButton: !1 }) }, success: OnSuccess, failure: function (e) { alert(e.d) }, error: function (e) { alert(e.d) } }), $("#myTable tfoot th").each(function (e) { var t = $(this).text(); "Paid2" != t && "Ticket Number" != t && "Net Payable" != t && "" != t && ($(this).html('<input style="width:150px;" type="text" class="form-control" placeholder="Search ' + t + '" />'), $("input", this).on("keyup change clear", function () { table.column(e).search() !== this.value && table.column(e).search(this.value).draw() })) }) } function myDatatable() { Paid = [], TotalInvoiceNoWithArray = [], $.ajax({ type: "POST", url: "/GenerateInvoice/GetAllConfirmPayable", data: "{}", contentType: "application/json; charset=utf-8", dataType: "json", beforeSend: function () { swal({ title: " ", text: "Please Wait", imageUrl: "/AdminAssets/Images/ajax-Load.gif", showCancelButton: !1, showConfirmButton: !1 }) }, success: OnSuccess, failure: function (e) { alert(e.d) }, error: function (e) { alert(e.d) } }), $("#myTable tfoot th").each(function (e) { var t = $(this).text(); "Paid2" != t && "Ticket Number" != t && "Net Payable" != t && "" != t && ($(this).html('<input style="width:150px;" type="text" class="form-control" placeholder="Search ' + t + '" />'), $("input", this).on("keyup change clear", function () { table.column(e).search() !== this.value && table.column(e).search(this.value).draw() })) }) } function OnSuccess(e) { var t; $("#checkAll").prop("checked", !1), 1 == e.success ? (setTimeout(function () { swal.close() }, 1500), table = $("#myTable").DataTable({ lengthMenu: [[20, 50, 100, 150], [20, 50, 100, 150]], orderCellsTop: !0, fixedHeader: !0, scrollCollapse: !0, scrollX: !0, select: !0, scrollY: "50vh", processing: !0, data: e.PAmount, columns: [{ data: "Invoice_Number" }, { data: "Net_Payable", render: function (e, t, a, n) { return 0 == a.Paid2 || null == a.Paid2 ? '<input value="' + a.Net_Payable + '" style="width:150px;" tabindex="' + (n.row + 1) + '" id="ObtainedMarks' + a.Invoice_Number + '" type="number" name="name" class="form-control" />' : '<input value="' + a.Paid2 + '" style="width:150px;" tabindex="' + (n.row + 1) + '" id="ObtainedMarks' + a.Invoice_Number + '" type="number" name="name" class="form-control" />' } }, { data: "Net_Payable" }, { data: "Balance" }, { data: "Ticket_Number" }, { data: "Description" }, { data: "Payable_Code" }, { data: "Pay_Status", render: function (e, t, a, n) { return "1" == a.Pay_Status ? "<label class='badge bg-success'>Paid</label>" : "<label class='badge bg-danger'>Not Paid</label>" } }, { data: "Invoice_Number", orderable: !1, render: function (e, t, a, n) { return '<input id="' + a.Invoice_Number + '" onclick="toggle(this);"  type="checkbox" class="RegisterChkbox" name="RegisterChkbox1" />' } }], initComplete: function () { count = 0, this.api().columns([3, 4, 5]).every(function () { var e = this.header(), e = $(e).html().replace(/[\W]/g, ""), t = this, a = $('<select style="width:100%" id="' + e + '" class="select2" ></select>').appendTo($(t.footer()).empty()).on("change", function () { var e = $.map($(this).select2("data"), function (e, t) { return e.text ? "^" + $.fn.dataTable.util.escapeRegex(e.text) + "$" : null }); 0 === e.length && (e = [""]); e = e.join("|"); t.search(e || "", !0, !1).draw() }); t.data().unique().sort().each(function (e, t) { a.append('<option value="' + e + '">' + e + "</option>") }), $("#" + e).select2({ multiple: !0, closeOnSelect: !1, placeholder: "Select a " + e }), $(".select2").val(null).trigger("change") }) }, fnCreatedRow: function (e, t, a) { t = t.Invoice_Number; $(e).attr("id", t) }, footerCallback: function (e, t, a, n, o) { var i = this.api(); asif = []; function r(e) { return "string" == typeof e ? +e.replace(/[\$,]/g, "") : "number" == typeof e ? e : 0 } amount = i.column(2, { page: "current" }).data().reduce(function (e, t) { return r(e) + r(t) }, 0), asif.push(amount.toFixed(2)), $(i.column(2).footer()).html("$ " + amount.toFixed(2)), balance = i.column(3, { page: "current" }).data().reduce(function (e, t) { return r(e) + r(t) }, 0), $(i.column(3).footer()).html("$ " + balance.toFixed(2)) }, language: { search: "", lengthMenu: "Select _MENU_ ", zeroRecords: "No <b>Confirm Pay Invoice</b> Data Found", infoEmpty: "No Records Available", infoFiltered: "(filtered from _MAX_ total records)" } }), $(".dataTables_filter input").attr("placeholder", "Search Confirm Pay Invoice"), $(".dataTables_filter input").addClass("form-control")) : ($("#myTable").DataTable({ bLengthChange: !1, orderCellsTop: !0, fixedHeader: !0, scrollCollapse: !0, searching: !1, scrollX: !0, scrollY: "50vh", processing: !0, language: { search: "", lengthMenu: "Select _MENU_ ", zeroRecords: "No <b>Confirm Pay Invoice</b> Data Found", infoEmpty: "No Records Available", infoFiltered: "(filtered from _MAX_ total records)" } }), t = $("#reservation").val(), swal("INFO!", e.message + " for " + t, "info")) } function CalculateObtainedMarks(e, t) { var a = t.substring(13, 20); CombineMarksvalue.push(t), TotalInvoiceNoWithArray.push(a) } function toggle(e) { var t, a = e.id; 1 == e.checked ? (t = 0, $(".RegisterChkbox").each(function () { this.checked || (t = 1) }), 0 == t && $("#checkAll").prop("checked", !0), e = $("#ObtainedMarks" + a).val(), AmountPayObject.push({ ID: a, obtainerMarks: e })) : ($("#checkAll").prop("checked", !1), AmountPayObject = AmountPayObject.filter(function (e) { return e.ID !== a })) } function getUniqueListBy(e, t) { return [...new Map(e.map(e => [e[t], e])).values()] } $(document).ready(function () { myDatatable() }), $("#checkAll").change(function () { this.checked ? $(".RegisterChkbox").each(function () { this.checked = !0; var e = this.id, t = $("#ObtainedMarks" + e).val(); AmountPayObject.push({ ID: e, obtainerMarks: t }) }) : $(".RegisterChkbox").each(function () { this.checked = !1; var t = this.id; AmountPayObject = AmountPayObject.filter(function (e) { return e.ID !== t }) }) }); var AmountPaid = []; function saveConfirmInvoice() { if (TotalInvoiceNoWithArray = [], 0 < AmountPayObject.length) { for (var e = getUniqueListBy(AmountPayObject, "ID"), t = 0; t < e.length; t++)TotalInvoiceNoWithArray.push(e[t].ID), "" == e[t].obtainerMarks ? AmountPaid.push(null) : AmountPaid.push(e[t].obtainerMarks); UpdateConfirmInvoice(TotalInvoiceNoWithArray, AmountPaid) } else $(".ui-pnotify").remove(), new PNotify({ title: "INFO!", text: "Please Check at least one", type: "info", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" }) } function UpdateConfirmInvoice(e, t) { $.ajax({ type: "POST", url: "/GenerateInvoice/SaveConfirmPayable", data: { InvNo: e, Paid2: t }, success: function (e) { 1 == e.success ? ($("#myTable").DataTable().destroy(), $("table tbody").empty(), myDatatable(), $(".ui-pnotify").remove(), new PNotify({ title: "SUCCESS!", text: e.message, type: "success", animation: "slide", delay: 3e3, top: "500px", min_height: "16px", animate_speed: 400, text_escape: !0, styling: "bootstrap3" })) : $("table tbody").append("<tr><td style='text-align:center; font-weight:500' colspan='9'>No Data Found, Invoice has already been Received</td></tr > ") } }) } function ArrNoDupe(e) { for (var t = {}, a = 0; a < e.length; a++)t[e[a]] = !0; var n, o = []; for (n in t) o.push(n); return o }